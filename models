playList.js
----------------
const mongoose = require('mongoose');

const PlaylistSchema = new mongoose.Schema({
  name: { type: String, required: true },
  description: { type: String },
  owner: { type: mongoose.Schema.Types.ObjectId, ref: 'User ', required: true },
  tracks: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Track' }]
}, { timestamps: true });

module.exports = mongoose.model('Playlist', PlaylistSchema);


RefreshToken.js
--------------------
const mongoose = require('mongoose');

const RefreshTokenSchema = new mongoose.Schema({
  token: { 
    type: String, 
    required: true,
    unique: true 
  },
  user: { 
    type: mongoose.Schema.Types.ObjectId, 
    ref: 'User', 
    required: true 
  },
  expiresAt: { 
    type: Date, 
    required: true 
  } 
}, { 
  timestamps: true 
});

// TTL Index for automatic cleanup
RefreshTokenSchema.index({ expiresAt: 1 }, { expireAfterSeconds: 0 });

module.exports = mongoose.model('RefreshToken', RefreshTokenSchema);

Track.js
---------
const mongoose = require('mongoose');


const TrackSchema = new mongoose.Schema({
title: { type: String, required: true },
artist: { type: String, default: 'Unknown' },
filename: { type: String, required: true },
originalname: { type: String },
uploadedBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' }
}, { timestamps: true });


module.exports = mongoose.model('Track', TrackSchema);

USer.js
-------
import mongoose from 'mongoose';

const UserSchema = new mongoose.Schema({
  name: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  password: { type: String, required: true }
}, { timestamps: true });

export default mongoose.model('User', UserSchema);






















